// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project.Context;

#nullable disable

namespace project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Drinks, including soft drinks, water, and juice.",
                            Name = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Freshly baked bread, pastries, and cakes.",
                            Name = "Bakery"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Milk, yogurt, cheese, and other dairy products.",
                            Name = "Dairy"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Frozen vegetables, meats, and ready-to-eat meals.",
                            Name = "Frozen Foods"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Fresh fruits and vegetables.",
                            Name = "Produce"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Fresh meat, poultry, and seafood.",
                            Name = "Meat"
                        },
                        new
                        {
                            CategoryId = 7,
                            Description = "Chips, cookies, candies, and other snacks.",
                            Name = "Snacks"
                        });
                });

            modelBuilder.Entity("project.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Carbonated soft drink.",
                            ImagePath = "/images/Products/coca-cola.jpg",
                            Quantity = 100,
                            Title = "Coca-Cola",
                            price = 1.50m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Popular cola drink.",
                            ImagePath = "/images/Products/pepsi.jpg",
                            Quantity = 120,
                            Title = "Pepsi",
                            price = 1.50m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "1 liter of fresh orange juice.",
                            ImagePath = "/images/Products/orange-juice.jpg",
                            Quantity = 80,
                            Title = "Orange Juice",
                            price = 3.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Freshly baked sourdough.",
                            ImagePath = "/images/Products/sourdough.jpg",
                            Quantity = 50,
                            Title = "Sourdough Bread",
                            price = 2.50m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Buttery flaky croissant.",
                            ImagePath = "/images/Products/croissant.jpg",
                            Quantity = 60,
                            Title = "Croissant",
                            price = 1.75m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Rich chocolate cake.",
                            ImagePath = "/images/Products/chocolate-cake.jpg",
                            Quantity = 10,
                            Title = "Chocolate Cake",
                            price = 15.00m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "1 liter of whole milk.",
                            ImagePath = "/images/Products/whole-milk.jpg",
                            Quantity = 90,
                            Title = "Whole Milk",
                            price = 1.20m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "200g of cheddar cheese.",
                            ImagePath = "/images/Products/cheddar.jpg",
                            Quantity = 40,
                            Title = "Cheddar Cheese",
                            price = 4.50m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "500g of plain Greek yogurt.",
                            ImagePath = "/images/Products/greek-yogurt.jpg",
                            Quantity = 30,
                            Title = "Greek Yogurt",
                            price = 3.00m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "500g of frozen peas.",
                            ImagePath = "/images/Products/frozen-peas.jpg",
                            Quantity = 75,
                            Title = "Frozen Peas",
                            price = 2.00m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Description = "12-inch frozen pizza.",
                            ImagePath = "/images/Products/frozen-pizza.jpg",
                            Quantity = 25,
                            Title = "Frozen Pizza",
                            price = 6.50m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Description = "1kg of chicken nuggets.",
                            ImagePath = "/images/Products/frozen-nuggets.jpg",
                            Quantity = 35,
                            Title = "Frozen Chicken Nuggets",
                            price = 8.00m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Description = "1kg of bananas.",
                            ImagePath = "/images/Products/bananas.jpg",
                            Quantity = 100,
                            Title = "Bananas",
                            price = 0.99m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "1kg of fresh carrots.",
                            ImagePath = "/images/Products/carrots.jpg",
                            Quantity = 85,
                            Title = "Carrots",
                            price = 1.20m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            Description = "1kg of red apples.",
                            ImagePath = "/images/Products/apples.jpg",
                            Quantity = 70,
                            Title = "Apples",
                            price = 2.50m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            Description = "1kg of chicken breast.",
                            ImagePath = "/images/Products/chicken-breast.jpg",
                            Quantity = 45,
                            Title = "Chicken Breast",
                            price = 5.00m
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 6,
                            Description = "1kg of fresh salmon fillet.",
                            ImagePath = "/images/Products/salmon.jpg",
                            Quantity = 20,
                            Title = "Salmon Fillet",
                            price = 12.00m
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 6,
                            Description = "1kg of lean ground beef.",
                            ImagePath = "/images/Products/ground-beef.jpg",
                            Quantity = 30,
                            Title = "Ground Beef",
                            price = 7.50m
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 7,
                            Description = "150g bag of potato chips.",
                            ImagePath = "/images/Products/potato-chips.jpg",
                            Quantity = 100,
                            Title = "Potato Chips",
                            price = 2.00m
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 7,
                            Description = "200g of chocolate chip cookies.",
                            ImagePath = "/images/Products/chocolate-cookies.jpg",
                            Quantity = 60,
                            Title = "Chocolate Cookies",
                            price = 3.50m
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 7,
                            Description = "300g of salted mixed nuts.",
                            ImagePath = "/images/Products/mixed-nuts.jpg",
                            Quantity = 50,
                            Title = "Mixed Nuts",
                            price = 5.00m
                        });
                });

            modelBuilder.Entity("project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("project.Models.Product", b =>
                {
                    b.HasOne("project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
